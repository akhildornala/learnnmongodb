20241219

learn from brocode youtube channel
https://www.youtube.com/watch?v=c2M-rlkkT5o


document based
non relational databse

db.createCollection("Employee");
db.Student.find();

db.Student.insertOne({
name:"akhildornala",
age:29,
gpa:4,
fullTime:true,
registeredDate: new Date(),
graduationDate: null,
courses: ["java","react","javascript","mongo"],
address: {street:"road no4",
city:"hyderabad",
zip:"500035"
}
});


sort by order
db.Student.find().sort({name:1})
db.Student.find().sort({name:-1})


find student with high gpa
db.Student.find().sort({gpa:-1});

find student with low gpa
db.Student.find().sort({gpa:1});




two conditions
db.Student.find({gpa:4, fullTime:true});


projections in mongo will filter with fields that will return
db.Student.find({},{name:true});
output:
{
  _id: ObjectId('6763bf65ab39425e37a63bc3'),
  name: 'Aashrit'
},
{
  _id: ObjectId('6763bf77ab39425e37a63bc4'),
  name: 'Dhriti'
}


db.Student.find({gpa:4},{_id:false, name:true});

db.Student.updateOne(filter, update);

db.Student.updateOne({name:"akhildornala"},{$set:{age:30}});

unset operator

db.Student.updateMany({},{$unset:{age:null}});

db.Student.updateMany({},{$unset:{age:null}});


db.Student.deleteOne({registeredDate:{$exists:false}});

operators
db.Student.find({name:{$ne:"akhildornala"}},{name:true});
db.Student.find({name:{$ne:"akhildornala"}},{name:true});
db.Student.find({gpa:{$gt:3}},{name:true});
db.Student.find({gpa:{$gt:3}},{name:true, gpa:true});
db.Student.find({gpa:{$gt:3.5}},{name:true, gpa:true});
db.Student.find({gpa:{$gte:3.5}},{name:true,gpa:true});
db.Student.find({gpa:{$lte:3.5}},{name:true,gpa:true});
db.Student.find({gpa:{$lt:3.5}},{name:true,gpa:true});

and condition
db.Student.find({gpa:{$gte:3}, gpa:{$lte:4}},{name:true, gpa:true});

or operation
db.Student.find({name:{$in:["akhildornala","Taradornala","Aarav",]}},{name:true, age:true});


and  operation
db.Student.find({$and:[{fullTime:true},{age:{$lte:22}}]}, {name:true, age:true});
db.Student.find({$and:[{gpa:{$gte:3}},{gpa:{$lte:4}}]},{name:true,gpa:true});

db.Student.find({$or:[{fullTime:true},{gpa:{$gte:4}}]},{name:true, age:true, gpa:true, fullTime:true});
----nor , both should be false
db.Student.find({$nor:[{fullTime:true},{gpa:{$gte:4}}]},{name:true, age:true, gpa:true, fullTime:true});

db.Student.find({name:"akhildornala"}).explain("executionStats");
totalDocsExamined:;8


db.Student.createIndex({name:1});
totalDocsExamined: 1,

after creating index on field name, execution stats showing that, total document examined to find records
are 1




